# Check the behavior of logdata
pdf("plotsFold2/histogramLogGSE.pdf")
hist(log2(GSEdata), col = "gray", main="GSE16515 - Histogram")
dev.off()
data2=log2(GSEdata)
pdf("plotsFold2/boxPlotRawData.pdf")
boxplot(data2, col=c("red", "red" , "red", "red","blue","red", "blue",
"red","blue","red","blue","red","red","red","blue",
"red","blue","red","blue","red","red","red","red",
"blue","red","red","red","red","red","blue","red",
"blue","red","blue","red","red","red","red","red","blue",
"red","red","blue","red","red","red","blue","red",
"blue","red","red","blue") , main="GSE16515 - boxplots", las=2,cex.axis=0.6)
legend("center", inset=.02, legend=c("tumor", "normal"),
fill=c("red", "blue"),cex=0.8,text.font=4)
dev.off()
# Hierarchical clustering of the "samples" based on
# the correlation coefficients of the expression values
hc = hclust(as.dist(1-cor(data2)))
pdf("plotsFold2/HclustRawData.pdf")
plot(hc, main="GSE15616 - Hierarchical Clustering",cex=0.6)
dev.off()
#######################################
# Differential expression (DE) analysis
#######################################
# Separate each of the conditions into three smaller data frames
tumor = data2[,c(1:4,6,8,10,12:14,16,18,20:23,25:29,31,33,35:38,40:42,44:46,48,50:51)]
normal = data2[,-c(1:4,6,8,10,12:14,16,18,20:23,25:29,31,33,35:38,40:42,44:46,48,50:51)]
# Compute the means of the samples of each condition
tumor.mean = apply(tumor, 1, mean)
normal.mean = apply(normal, 1, mean)
head(tumor.mean)
head(normal.mean)
# Just get the maximum of all the means
limit = max(tumor.mean, normal.mean)
# Scatter plot
pdf("plotsFold2/Scatter.pdf")
plot(normal.mean ~ tumor.mean, xlab = "tumor", ylab = "normal",
main = "GSE16515 - Scatter", xlim = c(0, limit), ylim = c(0, limit))
# Diagonal line
abline(0, 1, col = "red")
dev.off()
# Compute fold-change (biological significance)
# Difference between the means of the conditions
fold = tumor.mean - normal.mean
# Histogram of the fold differences
pdf("plotsFold2/hist.pdf")
hist(fold, col = "gray")
dev.off()
# Compute statistical significance (using t-test)
pvalue = NULL # Empty list for the p-values
tstat = NULL # Empty list of the t test statistics
for(i in 1 : nrow(GSEdata)) { # For each gene :
x = tumor[i,] # tumor of gene number i
y = normal[i,] # normal of gene number i
# Compute t-test between the two conditions
t = t.test(x, y)
# Put the current p-value in the pvalues list
pvalue[i] = t$p.value
# Put the current t-statistic in the tstats list
tstat[i] = t$statistic
}
head(pvalue)
# Histogram of p-values (-log10)
pdf("plotsFold2/pvalueHist.pdf")
hist(-log10(pvalue), col = "gray")
dev.off()
# Volcano: put the biological significance (fold-change)
# and statistical significance (p-value) in one plot
pdf("plotsFold2/volcano.pdf")
plot(fold, -log10(pvalue), main = "GSE16515 - Volcano")
fold_cutoff = 2
pvalue_cutoff = 0.01
abline(v = fold_cutoff, col = "blue", lwd = 3)
abline(v = -fold_cutoff, col = "red", lwd = 3)
abline(h = -log10(pvalue_cutoff), col = "green", lwd = 3)
dev.off()
# Screen for the genes that satisfy the filtering criteria
# Fold-change filter for "biological" significance
filter_by_fold = abs(fold) >= fold_cutoff
dim(data2[filter_by_fold, ])
# P-value filter for "statistical" significance
filter_by_pvalue = pvalue <= pvalue_cutoff
dim(data2[filter_by_pvalue, ])
# Combined filter (both biological and statistical)
filter_combined = filter_by_fold & filter_by_pvalue
filtered = data2[filter_combined,]
dim(filtered)
write.csv(filtered,"GSE_DEGs_samples.csv")
head(filtered)
expres<-apply(filtered,1,mean)
DEGs=data.frame(rownames(filtered),expres)
write.csv(DEGs,"all_DEGs.csv")
# Let's generate the volcano plot again,
# highlighting the significantly differential expressed genes
pdf("plotsFold2/DEGs.pdf")
plot(fold, -log10(pvalue), main = "GSE16515 - Volcano #2")
points (fold[filter_combined], -log10(pvalue[filter_combined]),
pch = 16, col = "red")
dev.off()
# Highlighting up-regulated in red and down-regulated in blue
pdf("plotsFold2/up&down.pdf")
plot(fold, -log10(pvalue), main = "GSE16515 - Volcano #3")
points (fold[filter_combined & fold < 0],
-log10(pvalue[filter_combined & fold < 0]),
pch = 16, col = "red")
points (fold[filter_combined & fold > 0],
-log10(pvalue[filter_combined & fold > 0]),
pch = 16, col = "blue")
dev.off()
upRegulated_DEGs = data2[filter_combined & fold > 0,]
dim(upRegulated_DEGs)
# Cluster the rows (genes) & columns (samples) by correlation
rowvUP = as.dendrogram(hclust(as.dist(1-cor(t(upRegulated_DEGs)))))
colvUP = as.dendrogram(hclust(as.dist(1-cor(upRegulated_DEGs))))
# Generate a heatmap
pdf("plotsFold2/upRegulated_heatmap.pdf")
heatmap.2(upRegulated_DEGs, Rowv=rowvUP,Colv=colvUP,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
dev.off()
expres<-apply(upRegulated_DEGs,1,mean)
upRegulated_DEGs=data.frame(rownames(upRegulated_DEGs),expres)
write.csv(upRegulated_DEGs,"upRegulated_DEGs.csv")
downRegulated_DEGs=  data2[filter_combined & fold < 0,]
dim(downRegulated_DEGs)
# Cluster the rows (genes) & columns (samples) by correlation
rowvDown = as.dendrogram(hclust(as.dist(1-cor(t(downRegulated_DEGs)))))
colvDown = as.dendrogram(hclust(as.dist(1-cor(downRegulated_DEGs))))
pdf("plotsFold2/downRegulated_heatmap.pdf")
heatmap.2(downRegulated_DEGs, Rowv=rowvDown,Colv=colvDown,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
dev.off()
expres<-apply(downRegulated_DEGs,1,mean)
downRegulated_DEGs=data.frame(rownames(downRegulated_DEGs),expres)
write.csv(downRegulated_DEGs,"downRegulated_DEGs.csv")
# Cluster the rows (genes) & columns (samples) by correlation
rowv = as.dendrogram(hclust(as.dist(1-cor(t(filtered)))))
colv = as.dendrogram(hclust(as.dist(1-cor(filtered))))
# install.packages("gplots")		# Uncomment if not already installed
# install.packages("RColorBrewer")	# Uncomment if not already installed
library(gplots)
# Enhanced heatmap
#pdf("plotsFold2/heatmap2.pdf")
#heatmap.2(filtered, Rowv=rowv, Colv=colv, cexCol=0.7,
# col = rev(redblue(256)), scale = "row")
#dev.off()
# Save the heatmap to a PDF file
# Cluster the rows (genes) & columns (samples) by correlation
rowvDEG = as.dendrogram(hclust(as.dist(1-cor(t(filtered)))))
colvDEG = as.dendrogram(hclust(as.dist(1-cor(filtered))))
pdf ("plotsFold2/GSE16515_DE_Heatmap.pdf")
#pdf("plotsFold2/upRegulated_heatmap.pdf")
heatmap.2(filtered, Rowv=rowvYO,Colv=colvYO,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
dev.off()
# Save the DE genes to a text file
#write.table (filtered, "GSE16515_DE.txt", sep = "\t",
#quote = FALSE)
#############################################################################
pdf ("plotsFold2/GSE16515_DE_Heatmap.pdf")
#pdf("plotsFold2/upRegulated_heatmap.pdf")
heatmap.2(filtered, Rowv=rowvYO,Colv=colvYO,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
dev.off()
rowvDown = as.dendrogram(hclust(as.dist(1-cor(t(downRegulated_DEGs)))))
colvDown = as.dendrogram(hclust(as.dist(1-cor(downRegulated_DEGs))))
dim(downRegulated_DEGs)
rowvDEG = as.dendrogram(hclust(as.dist(1-cor(t(filtered)))))
colvDEG = as.dendrogram(hclust(as.dist(1-cor(filtered))))
pdf ("plotsFold2/GSE16515_DE_Heatmap.pdf")
#pdf("plotsFold2/upRegulated_heatmap.pdf")
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
dev.off()
# Save the DE genes to a text file
colnames(filtered)
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
pdf ("plotsFold2/GSE16515_DE_Heatmap.pdf")
#pdf("plotsFold2/upRegulated_heatmap.pdf")
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
#margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
dev.off()
eatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,notecol="black",
#margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,notecol="black",
#margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
#margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
#margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
#margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black"
)
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
downRegulated_DEGs=  data2[filter_combined & fold < 0,]
dim(downRegulated_DEGs)
# Cluster the rows (genes) & columns (samples) by correlation
rowvDown = as.dendrogram(hclust(as.dist(1-cor(t(downRegulated_DEGs)))))
colvDown = as.dendrogram(hclust(as.dist(1-cor(downRegulated_DEGs))))
heatmap.2(downRegulated_DEGs, Rowv=rowvDown,Colv=colvDown,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
my_palette <- colorRampPalette(c("red", "green", "black"))(n = 99) # 100 percent
col_breaks = c(seq(0,10,length=40),
seq(11,40,length=30),
seq(41,100,length=30))
hm <- heatmap.2(downRegulated_DEGs,
col=my_palette,
breaks=col_breaks,
dendrogram="none",
Colv="NA", Rowv="NA")
heatmap.2(downRegulated_DEGs, Rowv=rowvDown,Colv=colvDown,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
key.par=list(mar=c(3.5,0,3,0)))
upRegulated_DEGs = data2[filter_combined & fold > 0,]
dim(upRegulated_DEGs)
# Cluster the rows (genes) & columns (samples) by correlation
rowvUP = as.dendrogram(hclust(as.dist(1-cor(t(upRegulated_DEGs)))))
colvUP = as.dendrogram(hclust(as.dist(1-cor(upRegulated_DEGs))))
heatmap.2(upRegulated_DEGs, Rowv=rowvUP,Colv=colvUP,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
upRegulated_DEGs = data2[filter_combined & fold > 0,]
dim(upRegulated_DEGs)
# Cluster the rows (genes) & columns (samples) by correlation
rowvUP = as.dendrogram(hclust(as.dist(1-cor(t(upRegulated_DEGs)))))
colvUP = as.dendrogram(hclust(as.dist(1-cor(upRegulated_DEGs))))
heatmap.2(upRegulated_DEGs, Rowv=rowvUP,Colv=colvUP,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
downRegulated_DEGs=  data2[filter_combined & fold < 0,]
dim(downRegulated_DEGs)
# Cluster the rows (genes) & columns (samples) by correlation
rowvDown = as.dendrogram(hclust(as.dist(1-cor(t(downRegulated_DEGs)))))
colvDown = as.dendrogram(hclust(as.dist(1-cor(downRegulated_DEGs))))
heatmap.2(downRegulated_DEGs, Rowv=rowvDown,Colv=colvDown,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
key.par=list(mar=c(3.5,0,3,0)))
heatmap.2(downRegulated_DEGs, Rowv=rowvDown,Colv=colvDown,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
key.par=list(mar=c(3.5,0,3,0)))
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
heatmap.2(filtered, Rowv=rowvDEG,Colv=colvDEG,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
upRegulated_DEGs = data2[filter_combined & fold > 0,]
dim(upRegulated_DEGs)
# Cluster the rows (genes) & columns (samples) by correlation
rowvUP = as.dendrogram(hclust(as.dist(1-cor(t(upRegulated_DEGs)))))
colvUP = as.dendrogram(hclust(as.dist(1-cor(upRegulated_DEGs))))
heatmap.2(upRegulated_DEGs, Rowv=rowvUP,Colv=colvUP,
col = rev(greenred(20*10)), cexRow=0.8,
cexCol=0.8,scale="row",notecol="black",
margins=c(5,5), # ("margin.Y", "margin.X")
trace='none',
symkey=FALSE,
symbreaks=FALSE,
dendrogram='none',
density.info='histogram',
denscol="black",
keysize=1,
#( "bottom.margin", "left.margin", "top.margin", "left.margin" )
key.par=list(mar=c(3.5,0,3,0)))
pdf("plotsFold2/up&down.pdf")
plot(fold, -log10(pvalue), main = "GSE16515 - Volcano #3")
points (fold[filter_combined & fold < 0],
-log10(pvalue[filter_combined & fold < 0]),
pch = 16, col = "red")
points (fold[filter_combined & fold > 0],
-log10(pvalue[filter_combined & fold > 0]),
pch = 16, col = "blue")
legend("topleft",c("NO","down", "up"),cex=.8,
col=c("black","blue","red"),pch=c(21,19,19),title="Genes")
dev.off()
pdf("plotsFold2/up&down.pdf")
plot(fold, -log10(pvalue), main = "GSE16515 - Volcano #3")
points (fold[filter_combined & fold < 0],
-log10(pvalue[filter_combined & fold < 0]),
pch = 16, col = "red")
points (fold[filter_combined & fold > 0],
-log10(pvalue[filter_combined & fold > 0]),
pch = 16, col = "blue")
legend("topleft",c("NO","down", "up"),cex=.8,
col=c("black","red","blue"),pch=c(21,19,19),title="Genes")
dev.off()
